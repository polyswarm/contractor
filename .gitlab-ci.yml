image: docker:stable

services:
  - docker:dind

stages:
  - test
  - e2e
  - deploy

test:
  image: python:3.6
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - apt-get update && apt-get install -y libudev-dev libusb-1.0-0-dev
    - pip install tox
  script:
    - tox -e py36

kick-e2e:
  tags:
    - docker
  before_script:
    - apk --no-cache add curl jq

  stage: e2e
  script:
    - set -e

    # kick e2e
    - >-
      E2E_PIPELINE_ID=`curl
      --silent
      --request POST
      --form "token=$CI_JOB_TOKEN"
      --form "variables[SOURCE_PROJECT]=$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
      --form "variables[SOURCE_BRANCH]=$CI_COMMIT_REF_NAME"
      --form ref=master
      "https://gitlab.polyswarm.io/api/v4/projects/${CI_CUSTOM_PROJECT_ID_E2E}/trigger/pipeline" | jq -r ".id"`

    # poll for it to finish
    - >-
      while [ -z $PIPELINE_STATUS ] || [ $PIPELINE_STATUS = "pending" ] || [ $PIPELINE_STATUS = "running" ]; do
        PIPELINE_STATUS=`curl \
          --silent \
          --header "PRIVATE-TOKEN: $CI_CUSTOM_CI_PAT" \
          "https://gitlab.polyswarm.io/api/v4/projects/${CI_CUSTOM_PROJECT_ID_E2E}/pipelines/$E2E_PIPELINE_ID" | jq -r ".status"`
        echo "waiting for e2e pipeline ...";
        sleep 5;
      done

    # check for success
    - >-
      if [ $PIPELINE_STATUS != "success" ]; then
        echo "failure further down the pipeline"
        exit 1
      fi

builddock:
  stage: deploy
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  only:
    - master
    - feature/docker-build
  script:
    - docker build -t polyswarm/contractor:latest -t polyswarm/contractor:$CI_COMMIT_SHA --label git_commit_id=$CI_COMMIT_SHA -f docker/Dockerfile .
    - docker login -u $CI_CUSTOM_DOCKER_HUB_USERNAME -p $CI_CUSTOM_DOCKER_HUB_PASSWORD
    - docker push polyswarm/contractor:latest
    - docker push polyswarm/contractor:$CI_COMMIT_SHA
