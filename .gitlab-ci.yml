image: $REPO_URL/stage

services:
  - docker:dind

stages:
  - build
  - test
  - e2e
  - release

variables:
  DOCKER_HOST: tcp://localhost:2375/
  BASE_IMAGE_NAME: contractor

###############################################################
# Build Stage (jobs inside a stage run in parallel)
###############################################################

build-linux:
  stage: build
  tags:
    - kube
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
     # try to download a cache image
     - docker pull $REPO_URL/$BASE_IMAGE_NAME:latest || true
     # explicitly pull the latest version of the dependant image
     - docker pull python:3.6-slim-stretch
     - docker build
       -f docker/Dockerfile
       -t $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_SHA
       -t $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_REF_SLUG
       --cache-from=$REPO_URL/$BASE_IMAGE_NAME:latest
       .
     - docker push $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_SHA
     - docker push $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_REF_SLUG

###############################################################
# Test Stage
###############################################################

test-linux:
  image: python:3.6
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - apt-get update && apt-get install -y libudev-dev libusb-1.0-0-dev
    - pip install tox
  script:
    - tox -e py36

###############################################################
# End-to-end Stage
###############################################################

###############################################################
# Release Stage
###############################################################

release-latest-linux:
  stage: release
  tags:
    - kube
  only:
    - master
  script:
    # Gets the current image that was built in the CI for this commit
    - docker pull $REPO_URL/$BASE_IMAGE_NAME:${MANUAL_IMAGE_TAG:-$CI_COMMIT_SHA}
    # Creates new tags for this image, one that should go to AWS and another to DockerHub with the tag "latest"
    - docker tag $REPO_URL/$BASE_IMAGE_NAME:${MANUAL_IMAGE_TAG:-$CI_COMMIT_SHA} $REPO_URL/$BASE_IMAGE_NAME:latest
    - docker tag $REPO_URL/$BASE_IMAGE_NAME:${MANUAL_IMAGE_TAG:-$CI_COMMIT_SHA} polyswarm/$BASE_IMAGE_NAME:latest
    # Pushes to AWS
    - docker push $REPO_URL/$BASE_IMAGE_NAME:latest
    # Pushes to Docker Hub
    - docker logout
    - docker login -u "$CI_CUSTOM_DOCKER_HUB_USERNAME" -p "$CI_CUSTOM_DOCKER_HUB_PASSWORD"
    - docker push polyswarm/$BASE_IMAGE_NAME:latest
